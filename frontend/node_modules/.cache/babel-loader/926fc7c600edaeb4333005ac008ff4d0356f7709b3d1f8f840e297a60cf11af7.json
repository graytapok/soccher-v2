{"ast":null,"code":"var _jsxFileName = \"B:\\\\Wadim\\\\Programmieren\\\\GitHub\\\\flask-react\\\\frontend\\\\src\\\\pages\\\\admin\\\\dashboard\\\\DashboardPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport AdminTable from \"../components/AdminTable\";\nimport Heading from \"../../../components/Heading\";\nimport Button from \"../../../components/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DashboardPage() {\n  _s();\n  const [data, setData] = useState({});\n  useEffect(() => {\n    fetch(\"admin/dashboard\").then(res => res.json()).then(d => setData(d.users));\n  }, []);\n  const [showEditUser, setShowEditUser] = useState(false);\n  const [showCreateUser, setShowCreateUser] = useState(false);\n  const toggleCreateUser = () => {\n    setShowCreateUser(true);\n    setShowEditUser(true);\n  };\n  const toggleEditUser = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ranking\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      title: \"Admin Dashboard\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"Create User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), !showEditUser && !showCreateUser ? /*#__PURE__*/_jsxDEV(AdminTable, {\n      head: {\n        2: {\n          name: \"Id\",\n          atribute: \"id\",\n          sortable: true\n        },\n        3: {\n          name: \"Username\",\n          atribute: \"username\",\n          sortable: true\n        },\n        4: {\n          name: \"Email\",\n          atribute: \"email\",\n          sortable: true\n        },\n        6: {\n          name: \"Followed Leagues\",\n          atribute: \"followed_leagues\",\n          sortable: false\n        },\n        5: {\n          name: \"Followed Matches\",\n          atribute: \"followed_matches\",\n          sortable: false\n        },\n        7: {\n          name: \"Admin\",\n          atribute: \"admin\",\n          sortable: true\n        },\n        8: {\n          name: \"Confirmed Email\",\n          atribute: \"email_confirmed\",\n          sortable: true\n        }\n      },\n      sorting: {\n        by: \"id\",\n        order: \"desc\"\n      },\n      tbody: data,\n      settings: {\n        info: \"info\",\n        delete: \"admin/delete/user\",\n        update: \"admin/dashboard\",\n        data: \"users\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardPage, \"If9Y3BQg0vwbEKP+F7j4rFgw4+A=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useEffect","useState","AdminTable","Heading","Button","jsxDEV","_jsxDEV","DashboardPage","_s","data","setData","fetch","then","res","json","d","users","showEditUser","setShowEditUser","showCreateUser","setShowCreateUser","toggleCreateUser","toggleEditUser","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","head","name","atribute","sortable","sorting","by","order","tbody","settings","info","delete","update","_c","$RefreshReg$"],"sources":["B:/Wadim/Programmieren/GitHub/flask-react/frontend/src/pages/admin/dashboard/DashboardPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AdminTable from \"../components/AdminTable\";\r\nimport Heading from \"../../../components/Heading\";\r\nimport Button from \"../../../components/Button\";\r\n\r\nfunction DashboardPage() {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(\"admin/dashboard\")\r\n      .then((res) => res.json())\r\n      .then((d) => setData(d.users));\r\n  }, []);\r\n\r\n  const [showEditUser, setShowEditUser] = useState(false);\r\n  const [showCreateUser, setShowCreateUser] = useState(false);\r\n\r\n  const toggleCreateUser = () => {\r\n    setShowCreateUser(true);\r\n    setShowEditUser(true);\r\n  };\r\n\r\n  const toggleEditUser = () => {};\r\n\r\n  return (\r\n    <div className=\"ranking\">\r\n      <Heading title=\"Admin Dashboard\">\r\n        <Button>Create User</Button>\r\n      </Heading>\r\n      {!showEditUser && !showCreateUser ? (\r\n        <AdminTable\r\n          head={{\r\n            2: { name: \"Id\", atribute: \"id\", sortable: true },\r\n            3: {\r\n              name: \"Username\",\r\n              atribute: \"username\",\r\n              sortable: true,\r\n            },\r\n            4: { name: \"Email\", atribute: \"email\", sortable: true },\r\n            6: {\r\n              name: \"Followed Leagues\",\r\n              atribute: \"followed_leagues\",\r\n              sortable: false,\r\n            },\r\n            5: {\r\n              name: \"Followed Matches\",\r\n              atribute: \"followed_matches\",\r\n              sortable: false,\r\n            },\r\n            7: {\r\n              name: \"Admin\",\r\n              atribute: \"admin\",\r\n              sortable: true,\r\n            },\r\n            8: {\r\n              name: \"Confirmed Email\",\r\n              atribute: \"email_confirmed\",\r\n              sortable: true,\r\n            },\r\n          }}\r\n          sorting={{ by: \"id\", order: \"desc\" }}\r\n          tbody={data}\r\n          settings={{\r\n            info: \"info\",\r\n            delete: \"admin/delete/user\",\r\n            update: \"admin/dashboard\",\r\n            data: \"users\",\r\n          }}\r\n        />\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}