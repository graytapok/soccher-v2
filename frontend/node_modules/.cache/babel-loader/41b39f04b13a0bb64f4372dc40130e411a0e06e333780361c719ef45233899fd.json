{"ast":null,"code":"var _jsxFileName = \"B:\\\\Wadim\\\\Programmieren\\\\GitHub\\\\flask-react\\\\frontend\\\\src\\\\pages\\\\admin\\\\dashboard\\\\DashboardPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, createContext } from \"react\";\nimport AdminTable from \"./components/AdminTable\";\nimport Heading from \"../../../components/Heading\";\nimport Button from \"../../../components/Button\";\nimport EditUser from \"./components/EditUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AdminDashboardContext = /*#__PURE__*/createContext();\nfunction DashboardPage() {\n  _s();\n  const [data, setData] = useState({});\n  useEffect(() => {\n    fetch(\"admin/dashboard\").then(res => res.json()).then(d => setData(d.users));\n  }, []);\n  const [showEditUser, setShowEditUser] = useState(false);\n  const [showCreateUser, setShowCreateUser] = useState(false);\n  const [editUser, setEditUser] = useState();\n  const [editFormData, setEditFormData] = useState();\n  const [editCorrectInput, setEditCorrectInput] = useState();\n  const [createFormData, setCreateFormData] = useState();\n  const [createCorrectInput, setCreateCorrectInput] = useState();\n  const toggleCreateUser = () => {\n    setShowCreateUser(true);\n    setShowEditUser(false);\n    setCreateCorrectInput({\n      username: {\n        unique: true,\n        rules: true\n      },\n      email: {\n        unique: true,\n        rules: true\n      },\n      password: true,\n      confirm_password: true\n    });\n  };\n  const toggleEditUser = (user = null) => {\n    setShowEditUser(prev => !prev);\n    setShowCreateUser(false);\n    if (user) {\n      setEditUser(user);\n      setEditFormData({\n        id: user.id,\n        username: user.username,\n        admin: user.admin,\n        email: user.email,\n        email_confirmed: user.email_confirmed\n      });\n    }\n    setEditCorrectInput({\n      username: {\n        unique: true,\n        rules: true\n      },\n      email: {\n        unique: true,\n        rules: true\n      },\n      password: true,\n      confirm_password: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AdminDashboardContext.Provider, {\n    value: {\n      toggleEditUser,\n      toggleCreateUser\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ranking\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        title: \"Admin Dashboard\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => toggleCreateUser(),\n          children: \"Create User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), !showEditUser && !showCreateUser ? /*#__PURE__*/_jsxDEV(AdminTable, {\n        head: {\n          2: {\n            name: \"Id\",\n            atribute: \"id\",\n            sortable: true\n          },\n          3: {\n            name: \"Username\",\n            atribute: \"username\",\n            sortable: true\n          },\n          4: {\n            name: \"Email\",\n            atribute: \"email\",\n            sortable: true\n          },\n          6: {\n            name: \"Followed Leagues\",\n            atribute: \"followed_leagues\",\n            sortable: false\n          },\n          5: {\n            name: \"Followed Matches\",\n            atribute: \"followed_matches\",\n            sortable: false\n          },\n          7: {\n            name: \"Admin\",\n            atribute: \"admin\",\n            sortable: true\n          },\n          8: {\n            name: \"Confirmed Email\",\n            atribute: \"email_confirmed\",\n            sortable: true\n          }\n        },\n        sorting: {\n          by: \"id\",\n          order: \"desc\"\n        },\n        tbody: data,\n        settings: {\n          info: \"info\",\n          delete: \"admin/delete/user\",\n          update: \"admin/dashboard\",\n          data: \"users\",\n          edit: toggleEditUser\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : showEditUser ? /*#__PURE__*/_jsxDEV(EditUser, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"penis2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardPage, \"DF/R9NIb1V9RcghGWguFAZUiaNU=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useEffect","useState","createContext","AdminTable","Heading","Button","EditUser","jsxDEV","_jsxDEV","AdminDashboardContext","DashboardPage","_s","data","setData","fetch","then","res","json","d","users","showEditUser","setShowEditUser","showCreateUser","setShowCreateUser","editUser","setEditUser","editFormData","setEditFormData","editCorrectInput","setEditCorrectInput","createFormData","setCreateFormData","createCorrectInput","setCreateCorrectInput","toggleCreateUser","username","unique","rules","email","password","confirm_password","toggleEditUser","user","prev","id","admin","email_confirmed","Provider","value","children","className","title","onClick","fileName","_jsxFileName","lineNumber","columnNumber","head","name","atribute","sortable","sorting","by","order","tbody","settings","info","delete","update","edit","_c","$RefreshReg$"],"sources":["B:/Wadim/Programmieren/GitHub/flask-react/frontend/src/pages/admin/dashboard/DashboardPage.jsx"],"sourcesContent":["import React, { useEffect, useState, createContext } from \"react\";\r\nimport AdminTable from \"./components/AdminTable\";\r\nimport Heading from \"../../../components/Heading\";\r\nimport Button from \"../../../components/Button\";\r\nimport EditUser from \"./components/EditUser\";\r\n\r\nexport const AdminDashboardContext = createContext();\r\n\r\nfunction DashboardPage() {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(\"admin/dashboard\")\r\n      .then((res) => res.json())\r\n      .then((d) => setData(d.users));\r\n  }, []);\r\n\r\n  const [showEditUser, setShowEditUser] = useState(false);\r\n  const [showCreateUser, setShowCreateUser] = useState(false);\r\n\r\n  const [editUser, setEditUser] = useState();\r\n  const [editFormData, setEditFormData] = useState();\r\n  const [editCorrectInput, setEditCorrectInput] = useState();\r\n\r\n  const [createFormData, setCreateFormData] = useState();\r\n  const [createCorrectInput, setCreateCorrectInput] = useState();\r\n\r\n  const toggleCreateUser = () => {\r\n    setShowCreateUser(true);\r\n    setShowEditUser(false);\r\n    setCreateCorrectInput({\r\n      username: { unique: true, rules: true },\r\n      email: { unique: true, rules: true },\r\n      password: true,\r\n      confirm_password: true,\r\n    });\r\n  };\r\n\r\n  const toggleEditUser = (user = null) => {\r\n    setShowEditUser((prev) => !prev);\r\n    setShowCreateUser(false);\r\n    if (user) {\r\n      setEditUser(user);\r\n      setEditFormData({\r\n        id: user.id,\r\n        username: user.username,\r\n        admin: user.admin,\r\n        email: user.email,\r\n        email_confirmed: user.email_confirmed,\r\n      });\r\n    }\r\n    setEditCorrectInput({\r\n      username: { unique: true, rules: true },\r\n      email: { unique: true, rules: true },\r\n      password: true,\r\n      confirm_password: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AdminDashboardContext.Provider\r\n      value={{\r\n        toggleEditUser,\r\n        toggleCreateUser,\r\n      }}\r\n    >\r\n      <div className=\"ranking\">\r\n        <Heading title=\"Admin Dashboard\">\r\n          <Button onClick={() => toggleCreateUser()}>Create User</Button>\r\n        </Heading>\r\n        {!showEditUser && !showCreateUser ? (\r\n          <AdminTable\r\n            head={{\r\n              2: { name: \"Id\", atribute: \"id\", sortable: true },\r\n              3: {\r\n                name: \"Username\",\r\n                atribute: \"username\",\r\n                sortable: true,\r\n              },\r\n              4: { name: \"Email\", atribute: \"email\", sortable: true },\r\n              6: {\r\n                name: \"Followed Leagues\",\r\n                atribute: \"followed_leagues\",\r\n                sortable: false,\r\n              },\r\n              5: {\r\n                name: \"Followed Matches\",\r\n                atribute: \"followed_matches\",\r\n                sortable: false,\r\n              },\r\n              7: {\r\n                name: \"Admin\",\r\n                atribute: \"admin\",\r\n                sortable: true,\r\n              },\r\n              8: {\r\n                name: \"Confirmed Email\",\r\n                atribute: \"email_confirmed\",\r\n                sortable: true,\r\n              },\r\n            }}\r\n            sorting={{ by: \"id\", order: \"desc\" }}\r\n            tbody={data}\r\n            settings={{\r\n              info: \"info\",\r\n              delete: \"admin/delete/user\",\r\n              update: \"admin/dashboard\",\r\n              data: \"users\",\r\n              edit: toggleEditUser,\r\n            }}\r\n          />\r\n        ) : showEditUser ? (\r\n          <EditUser />\r\n        ) : (\r\n          <span>penis2</span>\r\n        )}\r\n      </div>\r\n    </AdminDashboardContext.Provider>\r\n  );\r\n}\r\n\r\nexport default DashboardPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}